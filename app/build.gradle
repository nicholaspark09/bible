apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.getkeepsafe.dexcount'

def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
def versionBuild = System.getProperty('buildNumber', "1") as int
def RES = 'src/main/res'
def RES_EXT = 'src/main/res-'

def isCi = "true".equals(System.getProperty("isCi"))
def preDexEnabled = "true".equals(System.getProperty("preDex", "true"))
def failTest = "true".equals(System.getProperty("failTest", "false"))
def enableCrashlytics = "true".equals(System.getProperty("enableCrashlytics", "false"))
def API_KEY = "QmEwRzFNS2d0WDZjSEpmMTRRb2h6SkZMR29kRG5iNTNFbFY5Z3UzZzo="

def gitSha() {
    def p = 'git rev-parse --short HEAD'.execute([], project.rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        throw new RuntimeException(p.errorStream.text)
    }
    return p.text.trim()
}

def gitTimestamp() {
    def p = 'git log -n 1 --format=%at'.execute([], rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        throw new RuntimeException(p.errorStream.text)
    }
    return p.text.trim()
}

android {
    compileSdkVersion 24
    buildToolsVersion "25.0.0"
    dexOptions {
        preDexLibraries = preDexEnabled && isCi
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "com.apps.nicholaspark.bible"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'GIT_SHA', "\"${gitSha()}\""
        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp()}L"
        buildConfigField 'Boolean', 'FAIL_TEST', "${failTest}"
        buildConfigField 'Boolean', 'ENABLE_CRASHLYTICS', 'true'
        buildConfigField 'String', 'API_KEY', "\"${API_KEY}\""
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        free {
            applicationId "com.apps.nicholaspark.bible.free"
        }
        paid {
            applicationId "com.apps.nicholaspark.bible.paid"
        }
    }
    sourceSets { main { res.srcDirs = ['src/main/res', 'src/main/res-home'] } }
}

final SUPPORT_VERSION = '25.0.1'
final DAGGER_VERSION = '2.7'
final RETROFIT_VERSION = '2.1.0'
final OK_HTTP_VERSION = '3.4.1'
final BUTTERKNIFE_VERSION = '8.4.0'
final AUTO_VALUE_VERSION = '1.3'
final AUTO_VALUE_GSON_VERSION = '0.4.2'
final LEAK_CANARY_VERSION = '1.5'
final BLUELINE_VERSION = '2.0.5'
final SQLBRITE_VERSION = '1.1.1'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //Test
    testCompile 'junit:junit:4.12'
    //Android
    compile 'com.android.support:support-annotations:' + SUPPORT_VERSION
    compile 'com.android.support:support-v4:' + SUPPORT_VERSION
    compile 'com.android.support:appcompat-v7:' + SUPPORT_VERSION
    compile 'com.android.support:cardview-v7:' + SUPPORT_VERSION
    compile 'com.android.support:recyclerview-v7:' + SUPPORT_VERSION
    compile 'com.android.support:gridlayout-v7:' + SUPPORT_VERSION
    compile 'com.android.support:design:' + SUPPORT_VERSION
    //DI
    compile 'com.google.dagger:dagger:' + DAGGER_VERSION
    annotationProcessor 'com.google.dagger:dagger-compiler:' + DAGGER_VERSION
    //Rx
    compile 'io.reactivex.rxjava2:rxjava:2.0.0-RC4'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.0-RC1'
    //Http
    compile 'com.squareup.okhttp3:okhttp:' + OK_HTTP_VERSION
    compile 'com.squareup.okhttp3:logging-interceptor:' + OK_HTTP_VERSION
    compile 'com.squareup.retrofit2:retrofit:' + RETROFIT_VERSION
    compile 'com.squareup.retrofit2:converter-gson:' + RETROFIT_VERSION
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0-RC3'
    compile 'com.google.code.gson:gson:2.7'
    //UI Management
    compile 'com.bluelinelabs:conductor:' + BLUELINE_VERSION
    compile 'com.bluelinelabs:conductor-support:' + BLUELINE_VERSION
    //Utilities
    compile 'com.jakewharton:butterknife:' + BUTTERKNIFE_VERSION
    annotationProcessor 'com.jakewharton:butterknife-compiler:' + BUTTERKNIFE_VERSION
    compile 'com.google.auto.value:auto-value:' + AUTO_VALUE_VERSION
    annotationProcessor 'com.google.auto.value:auto-value:' + AUTO_VALUE_VERSION
    provided 'com.ryanharter.auto.value:auto-value-gson:' + AUTO_VALUE_GSON_VERSION
    annotationProcessor 'com.ryanharter.auto.value:auto-value-gson:' + AUTO_VALUE_GSON_VERSION
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.4'
    compile 'com.jakewharton.timber:timber:4.3.1'
    compile 'com.jakewharton.byteunits:byteunits:0.9.1'
    //Debug
    debugCompile 'com.jakewharton:process-phoenix:1.0.2'
    debugCompile 'com.squareup.retrofit2:retrofit-mock:' + RETROFIT_VERSION
    debugCompile 'com.squareup.leakcanary:leakcanary-android:' + LEAK_CANARY_VERSION
    //Release
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:' + LEAK_CANARY_VERSION
    //Test
    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.30'
    testCompile 'org.mockito:mockito-core:2.2.3'

}
